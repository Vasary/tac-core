name: Tests
on:
  push:
    branches:
      - main
jobs:
  security:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - name: PHP Security Checker
        uses: StephaneBour/actions-php-security-checker@1.2
        with:
          composer-lock: './composer.lock'
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.1', '8.2']
    name: PHP ${{ matrix.php-versions }}
    steps:
      - name: Setup PHP ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: uopz redis pdo pdo_sqlite sockets intl
          coverage: xdebug

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Dependencies (PHP vendors)
        run: composer install -q --no-ansi --no-interaction --no-suggest --no-progress --prefer-dist

      - name: Execute tests via PHPUnit
        run: bin/phpunit

      - name: Coverage Report as Comment (Clover)
        uses: lucassabreu/comment-coverage-clover@main
        with:
          file: resource/coverage.xml
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    name: Build application container
    steps:
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build unit container
        run: |
          git clone https://github.com/nginx/unit
          cd unit
          git checkout 1.29.0
          cd pkg/docker
          make build-php82 VERSION_php=8.2.1
          pwd
          rm -rf ../../../../
          rm -Rf unit
        shell: bash

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get the version
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_REF:10})

      - name: Build the tagged Docker image
        run: docker build . --file Dockerfile --tag vasary/tac-core:${{steps.vars.outputs.tag}}

      - name: Push the tagged Docker image
        run: docker push vasary/tac-core:${{steps.vars.outputs.tag}}

      - name: Build the latest Docker image
        run: docker build . --file Dockerfile --tag vasary/tac-core:latest

      - name: Push the latest Docker image
        run: docker push vasary/tac-core:latest
