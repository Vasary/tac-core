name: Test and build
on:
  push:
    branches:
      - main

concurrency:
  group: test-and-build
  cancel-in-progress: true

jobs:
  artifact:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2.1'
          extensions: uopz redis pdo pdo_sqlite sockets intl

      - name: Install Dependencies
        run: composer install --no-ansi --no-interaction --no-suggest --no-progress --prefer-dist

      - name: Packing
        run: |
          rm -Rf ./.github ./build ./pages ./resource/* ./var/* renovate.json .dockerignore .git .gitignore README.md
          cd ../
          tar -czvf artifact.tar.gz ./tac-core
          mv artifact.tar.gz ./tac-core

      - name: Uploading package
        uses: actions/upload-artifact@master
        with:
          name: artifact
          path: artifact.tar.gz
          retention-days: 1

  validate:
    needs: [ artifact ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - uses: actions/download-artifact@master
        with:
          name: artifact
          path: .

      - name: Extracting package
        run: |
          tar xvfz artifact.tar.gz -C ../
          rm artifact.tar.gz

      - name: Validate composer.lock
        run: composer validate --no-check-all --no-check-publish

  security:
    needs: [ artifact ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - uses: actions/download-artifact@master
        with:
          name: artifact
          path: .

      - name: Extracting package
        run: |
          tar xvfz artifact.tar.gz -C ../
          rm artifact.tar.gz

      - name: PHP Security Checker
        uses: StephaneBour/actions-php-security-checker@1.2
        with:
          composer-lock: './composer.lock'

  tests:
    needs: [ artifact ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2.1'
          extensions: uopz redis pdo pdo_sqlite sockets intl
          coverage: xdebug

      - uses: actions/download-artifact@master
        with:
          name: artifact
          path: .

      - name: Extracting package
        run: |
          tar xvfz artifact.tar.gz -C ../
          rm artifact.tar.gz

      - name: Execute tests via PHPUnit
        run: bin/phpunit

      - name: Coverage Report as Comment (Clover)
        uses: lucassabreu/comment-coverage-clover@main
        with:
          file: resource/coverage.xml

  build:
    needs: [ tests, security, validate ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build unit container
        run: build/build-nginx-unit-base.sh
        shell: bash

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build the tagged Docker image
        run: docker build . --file build/Dockerfile --tag vasary/tac-core:latest

      - name: Push the latest Docker image
        run: docker push vasary/tac-core:latest
